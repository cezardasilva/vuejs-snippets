'.text.html.vue, .js':
  'Vue Component':
    'prefix': 'template'
    'description': 'This snippet generates the basic structure for a Vue JS Component'
    'body': """
    <template>
      <div id='YourComponentName'>
        <!--You component contents goes here-->
      </div>
    </template>
    <script>
      export default {
      	name: "YourComponentName",
      	data(){
      		return {
      			//Component Data
            example: true,
            foo: "bar"
      		}
      	},

      	created(){
      		//On Component created
      	},

      	methods: {
      		functionExample(){
            //Basic Component method
      		}
      	}
      }
    </script>
    """
  'Vue Router':
    'prefix': 'router'
    'description': 'This snippet generates a Vue Router map function'
    'body': """
    import Vue from 'vue'
    import VueRouter from 'vue-router'

    Vue.use(VueRouter)

    const routes = [
      {
    		name: "YourRouteName",
    		path: "/",
    		component: YourComponent
    	}
    ]

    export const router = new VueRouter({
    	routes: routes,
    	scrollBehavior (to, from, savedPosition) {
    		return { x: 0, y: 0 }
    	}
    })
    """
  'Vue Filter':
    'prefix': 'filter'
    'description': ''
    'body': """
    Vue.filter('yourfiltername', (value) => {
    	return true
    })
    """
  'Vue HTTP Get':
    'prefix': 'get'
    'description': 'This snippet generates a Vue HTTP Get Request function'
    'body': """
    CONTEXT.$http.get(URL).then((result) => {

  	}, (error) => {

  	})
    """
  'Vue HTTP Post':
    'prefix': 'post'
    'description': 'This snippet generates a Vue HTTP Post Request function'
    'body': """
    CONTEXT.$http.post(URL, PARAMS).then((response) => {

    }, (error) => {

    })
    """
  'Vue HTTP Put':
    'prefix': 'put'
    'description': 'This snippet generates a Vue HTTP Put Request function'
    'body': """
    CONTEXT.$http.put(URL, PARAMS).then((response) => {

		}, (error) => {

		})
    """
  'Vue HTTP Delete':
    'prefix': 'delete'
    'description': 'This snippet generates a Vue HTTP Delete Request function'
    'body': """
    CONTEXT.$http.delete(URL, PARAMS).then((response) => {

		}, (error) => {

		})
    """
